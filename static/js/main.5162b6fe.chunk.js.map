{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","questions","id","text","options","nextQuestion","inputType","_useState","useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","_useState4","answers","setAnswers","_useState5","_useState6","questionHistory","setQuestionHistory","_useState7","_useState8","inputValue","setInputValue","_useState9","_useState10","dateValue","setDateValue","currentQuestionData","handleAnswerClick","selectedOption","updatedAnswers","_objectSpread","find","question","indexOf","concat","_toConsumableArray","console","log","handleInputChange","e","value","target","isNaN","handleDateChange","React","createElement","className","length","map","option","index","key","type","placeholder","onChange","onClick","answerText","previousQuestion","pop","findIndex","q","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5162b6fe.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const questions = [\n    {\n      id: 1,\n      text: \"Отлично, есть ли у вас работа?\",\n      options: [\n        { text: \"Да\", nextQuestion: 2 },\n        { text: \"Нет\", nextQuestion: 29 },\n      ],\n    },\n    {\n      id: 2,\n      text: \"Отлично, нам есть о чем поговорить. Вы имеете стабильный ежемесячный доход?\",\n      options: [\n        { text: \"Да\", nextQuestion: 3 },\n        { text: \"Нет\", nextQuestion: 29 },\n      ],\n    },\n    {\n      id: 3,\n      text: \"Супер, какая у вас зарплата, без учета аванса?\",\n      options: [{ inputType: \"money\", nextQuestion: 4 }],\n    },\n    {\n      id: 4,\n      text: \"Отлично, какого числа каждого месяца вы получаете зарплату?\",\n      options: [{ inputType: \"date\", nextQuestion: 5 }],\n    },\n    {\n      id: 5,\n      text: \"Какой размер аванса вы получаете?\",\n      options: [\n        { inputType: \"money\", nextQuestion: 6 },\n        { text: \"Я не получаю аванс\", nextQuestion: 7 },\n      ],\n    },\n    {\n      id: 6,\n      text: \"Какого числа вы получаете аванс?\",\n      options: [{ inputType: \"date\", nextQuestion: 7 }],\n    },\n    {\n      id: 7,\n      text: \"Хорошо, получаете ли вы премию?\",\n      options: [\n        { text: \"Да\", nextQuestion: 8 },\n        { text: \"Нет\", nextQuestion: 9 },\n      ],\n    },\n    {\n      id: 8,\n      text: \"Имеете ли вы дополнительный доход, не связанный с вашей работой?\",\n      options: [\n        { text: \"Да\", nextQuestion: 9 },\n        { text: \"Нет\", nextQuestion: 9 },\n      ],\n    },\n    {\n      id: 9,\n      text: \"Хорошо, мы будем учитывать ваш дополнительный доход. Выберите 'Дополнительный доход' -> 'Другое' в меню бота.\",\n      options: [{ text: \"Ок\", nextQuestion: 10 }],\n    },\n    {\n      id: 10,\n      text: \"Мы полностью заполнили данные о вашем доходе! Теперь переходим к расходам!\",\n      options: [{ text: \"Ок\", nextQuestion: 11 }],\n    },\n    {\n      id: 11,\n      text: \"Какую сумму в месяц вы тратите на продукты?\",\n      options: [{ inputType: \"money\", nextQuestion: 12 }],\n    },\n    {\n      id: 12,\n      text: \"Вы арендуете жилье?\",\n      options: [\n        { text: \"Да\", nextQuestion: 13 },\n        { text: \"Нет\", nextQuestion: 30 },\n      ],\n    },\n    {\n      id: 13,\n      text: \"Какую сумму в месяц вы тратите на аренду жилья?\",\n      options: [{ inputType: \"money\", nextQuestion: 14 }],\n    },\n    {\n      id: 14,\n      text: \"Какую сумму в месяц вы тратите на интернет?\",\n      options: [{ inputType: \"money\", nextQuestion: 15 }],\n    },\n    {\n      id: 15,\n      text: \"Какую сумму в месяц вы тратите на мобильную связь?\",\n      options: [{ inputType: \"money\", nextQuestion: 16 }],\n    },\n    {\n      id: 16,\n      text: \"Какую сумму в месяц вы тратите на личные расходы?\",\n      options: [{ inputType: \"money\", nextQuestion: 17 }],\n    },\n    {\n      id: 17,\n      text: \"Какую сумму в месяц вы тратите на уход за собой (парикмахерская, салоны красоты, и т. д.)?\",\n      options: [{ inputType: \"money\", nextQuestion: 18 }],\n    },\n    {\n      id: 18,\n      text: \"Какую сумму в месяц вы тратите на общественный транспорт?\",\n      options: [{ inputType: \"money\", nextQuestion: 19 }],\n    },\n    {\n      id: 19,\n      text: \"Имеется ли у вас автомобиль?\",\n      options: [\n        { text: \"Да\", nextQuestion: 20 },\n        { text: \"Нет\", nextQuestion: 27 },\n      ],\n    },\n    {\n      id: 20,\n      text: \"Какую сумму в месяц вы тратите на бензин?\",\n      options: [{ inputType: \"money\", nextQuestion: 21 }],\n    },\n    {\n      id: 21,\n      text: \"Как часто вы моете свой автомобиль?\",\n      options: [\n        { text: \"Каждый месяц\", nextQuestion: 22 },\n        { text: \"Раз в два месяца\", nextQuestion: 22 },\n        { text: \"Раз в три месяца\", nextQuestion: 22 },\n      ],\n    },\n    {\n      id: 22,\n      text: \"Сколько вы тратите на мойку автомобиля?\",\n      options: [{ inputType: \"money\", nextQuestion: 23 }],\n    },\n    {\n      id: 23,\n      text: \"Какую сумму в год вы тратите на техническое обслуживание вашего автомобиля?\",\n      options: [{ inputType: \"money\", nextQuestion: 24 }],\n    },\n    {\n      id: 24,\n      text: \"Какую сумму в год вы тратите на переобувку шин для автомобиля?\",\n      options: [{ inputType: \"money\", nextQuestion: 25 }],\n    },\n    {\n      id: 25,\n      text: \"Какую сумму в год вы тратите на страховку автомобиля?\",\n      options: [{ inputType: \"money\", nextQuestion: 26 }],\n    },\n    {\n      id: 26,\n      text: \"Какую сумму в год вы тратите на налог на автомобиль?\",\n      options: [{ inputType: \"money\", nextQuestion: 27 }],\n    },\n    {\n      id: 27,\n      text: \"Какую сумму в год вы тратите на налог на квартиру?\",\n      options: [{ inputType: \"money\", nextQuestion: 28 }],\n    },\n    {\n      id: 28,\n      text: \"Спасибо! Мы полностью заполнили данные о вас!\",\n      options: [{ text: \"Ок\", nextQuestion: 1 }],\n    },\n    {\n      id: 29,\n      text: \"Какой средний ежемесячный доход вы получаете?\",\n      options: [{ inputType: \"money\", nextQuestion: 10 }],\n    },\n    {\n      id: 30,\n      text: \"Какую сумму в месяц Вы тратите на жкх?\",\n      options: [{ inputType: \"money\", nextQuestion: 31 }],\n    },\n    {\n      id: 31,\n      text: \"Какую сумму в месяц Вы тратите на электричество?\",\n      options: [{ inputType: \"money\", nextQuestion: 14 }],\n    }\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [questionHistory, setQuestionHistory] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [dateValue, setDateValue] = useState(null);\n\n  const currentQuestionData = questions[currentQuestion];\n\n  const handleAnswerClick = (selectedOption) => {\n    const updatedAnswers = { ...answers };\n    updatedAnswers[currentQuestionData.id] = selectedOption;\n\n    setAnswers(updatedAnswers);\n\n    if (selectedOption.nextQuestion) {\n      const nextQuestion = questions.find((question) => question.id === selectedOption.nextQuestion);\n\n      if (nextQuestion) {\n        setInputValue(\"\");\n        setDateValue(null);\n        setCurrentQuestion(questions.indexOf(nextQuestion));\n        setQuestionHistory([...questionHistory, currentQuestionData]);\n        return;\n      }\n    } else {\n      console.log(\"Результаты:\", answers);\n    }\n  };\n\n  const handleReturnToPreviousQuestion = () => {\n    if (questionHistory.length > 0) {\n      const previousQuestion = questionHistory.pop();\n      setCurrentQuestion(questions.findIndex(q => q.id === previousQuestion.id));\n      setQuestionHistory([...questionHistory]);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n\n    if (!isNaN(value) || value === \"\") {\n      setInputValue(value);\n    }\n  };\n\n  const handleDateChange = (e) => {\n    const value = e.target.value;\n    setDateValue(value);\n  };\n\n  return (\n    <div className=\"App container\">\n      <div className=\"quiz\">\n        <h1>{currentQuestionData.text}</h1>\n        <div className=\"quiz__button button\">\n          {currentQuestionData.options && currentQuestionData.options.length > 0 ? (\n            currentQuestionData.options.map((option, index) => (\n              <div key={index} className=\"button__item\">\n                {option.inputType === \"money\" ? (\n                  <div className=\"quiz__input\">\n                    <p>Поле для ввода суммы:</p>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Введите сумму\"\n                      value={inputValue}\n                      onChange={handleInputChange}\n                    />\n                    <button\n                      onClick={() => {\n                        if (inputValue !== \"\") {\n                          handleAnswerClick({ answerText: inputValue, nextQuestion: option.nextQuestion });\n                        }\n                      }}\n                    >\n                      Далее\n                    </button>\n                  </div>\n                ) : option.inputType === \"date\" ? (\n                  <div className=\"quiz__input\">\n                    <p>Поле для выбора даты:</p>\n                    <input\n                      type=\"date\"\n                      value={dateValue}\n                      onChange={handleDateChange}\n                    />\n                    <button\n                      onClick={() => {\n                        if (dateValue !== null) {\n                          handleAnswerClick({ answerText: dateValue, nextQuestion: option.nextQuestion });\n                        }\n                      }}\n                    >\n                      Далее\n                    </button>\n                  </div>\n                ) : (\n                  <button onClick={() => handleAnswerClick(option)}>\n                    {option.text}\n                  </button>\n                )}\n              </div>\n            ))\n          ) : null}\n          {questionHistory.length > 0 && (\n            <div className=\"button__back\">\n              <button onClick={handleReturnToPreviousQuestion}>\n                Назад\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}